name: "CI"

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v12
      with:
        name: 'cybertreiber'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix --version
    - run: nix flake check -L --keep-going
    - run: nix flake show
    - run: nix develop -c which repl
    - run: nix develop .#packages -c echo built

  integration-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./tests
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v12
      with:
        name: 'cybertreiber'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix-shell --quiet -p nix-info --run "nix-info -m"
    - run: ./templates.sh clone pure-system devShell
    - run: ./templates.sh check pure-system devShell
    - run: ./templates.sh check-pkg-overlayed pure-system google-cloud-sdk micromamba
    - run: ./templates.sh check-pkg-default pure-system google-cloud-sdk micromamba

  lints:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix fmt
    - run: git diff --exit-code
